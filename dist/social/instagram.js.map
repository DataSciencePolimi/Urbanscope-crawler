{"version":3,"sources":["social/instagram.js"],"names":[],"mappings":"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","file":"social/instagram.js","sourcesContent":["'use strict';\n// Load system modules\n\n// Load modules\nimport moment from 'moment';\nimport bunyan from 'bunyan';\nimport ig from 'instagram-node';\nimport Promise from 'bluebird';\n\n// Load my modules\nimport apiKeys from '../../config/instagram-keys.json';\n\n\n\n// Constant declaration\nconst MAX_RESULTS = 100; // 33 in reality\nconst MAX_REQUESTS = 5000; // jshint ignore: line\nconst WINDOW = 1000*60*60; // 1 h;\n// const WINDOW = 1000*30; // 30 sec;\n// const COLLECTION_NAME = 'tweets';\nconst SOCIAL = 'instagram';\n\n\n// Module variables declaration\nlet log = bunyan.createLogger( {\n  name: SOCIAL,\n  level: 'trace',\n} );\nlet api = ig.instagram();\nlog.trace( { apiKeys }, 'Using api keys' );\napi.use( apiKeys );\n\n\n\n// Module class declaration\n\n\n// Module functions declaration\nfunction wrap( media ) {\n  log.trace( 'Converting media %s', media.id ); // jshint ignore: line\n  let date = moment.unix( media.created_time ); // jshint ignore: line\n\n  let location = media.location;\n\n  let post = {\n    source: SOCIAL,\n    id: media.id,\n    text: media.caption,\n    date: date.toDate(),\n    location: location? {\n      type: 'Point',\n      coordinates: [ location.longitude, location.latitude ],\n    } : null,\n    author: media.user.username,\n    authorId: media.user.id,\n    tags: media.tags,\n    raw: media,\n  };\n\n  return post;\n}\n\n\n\nfunction wrapAll( medias ) {\n  log.trace( 'Wrapping %d media to posts', medias.length );\n  let wrapped = medias.map( wrap );\n  let filtered = wrapped.filter( t => t.location );\n  return filtered;\n}\n\n\nfunction* query( lat, lon, distance ) {\n  try {\n    let options = {\n      distance,\n      count: MAX_RESULTS,\n    };\n    let [ medias, rem, limit ] = yield api.media_searchAsync( lat, lon, options ); // jshint ignore: line\n    log.debug( 'Retrieved %d medias', medias.length );\n    return yield wrapAll( medias );\n  } catch( err ) {\n    if( err.code===429 ) { // Rate limit reached\n      log.debug( 'Limit reached, waiting' );\n      yield Promise.delay( WINDOW );\n      return yield query( lat, lon, distance );\n    }\n\n    throw err;\n  }\n}\n\n\n// Module initialization (at first load)\napi = Promise.promisifyAll( api );\n\n\n// Entry point\n\n// Exports\nexport { query };\n\n//  50 6F 77 65 72 65 64  62 79  56 6F 6C 6F 78"],"sourceRoot":"/source/"}