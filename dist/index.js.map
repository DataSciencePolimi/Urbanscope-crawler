{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n// Load system modules\nimport fs from 'fs';\nimport path from 'path';\n\n// Load modules\nimport co from 'co';\nimport bunyan from 'bunyan';\nimport turf from 'turf';\nimport grid from 'node-geojson-grid';\n\n// Load my modules\nimport Post from './model/post';\nimport { open as openMongo, close as closeMongo } from './model/';\nimport gridConfig from '../config/grid-config.json';\nimport nils from '../config/nils.json';\n\n\n// Constant declaration\nconst CONFIG_FOLDER = path.join( __dirname, '..', 'config' );\nconst GRID_FILE = path.join( CONFIG_FOLDER, 'generated-grids.json' );\n\n// Module variables declaration\nlet STATUS_FILE;\nlet log = bunyan.createLogger( {\n  name: 'cralwer',\n  level: 'trace',\n} );\n\n\n// Module functions declaration\nfunction* savePosts( posts ) {\n  let points = turf.featurecollection( posts.map( (p,index) => {\n    return turf.point( p.location.coordinates, { index } );\n  } ) );\n\n  let taggedPoints = turf.tag( points, nils, 'ID_NIL', 'nil' );\n\n  for( let point of taggedPoints.features ) {\n    try {\n      let { index, nil } = point.properties;\n      let rawPost = posts[ index ];\n\n      // Set the nil\n      rawPost.nil = nil;\n\n      // Create and save the post\n      let post = new Post( rawPost );\n      yield post.save();\n\n    } catch( err ) {\n      if( err.code===11000 ) {\n        log.error( 'Post already present' );\n      } else {\n        log.error( err, 'Cannot insert post' );\n      }\n    }\n  }\n}\nfunction saveState( grid, coord ) {\n  let status = {\n    grid,\n    coord,\n  };\n\n  let json = JSON.stringify( status, null, 2 );\n  fs.writeFileSync( STATUS_FILE, json, 'utf8' );\n\n  return status;\n}\n\n// Module class declaration\n\n\n// Module initialization (at first load)\n\n\n// Entry point\nco( function*() {\n\n  // Setup mongo\n  yield openMongo();\n\n  // Load social\n  let social = process.argv[ 2 ];\n  log.trace( 'Loading module \"%s\"', social );\n  let { query } = require( './social/'+social );\n  STATUS_FILE =  path.join( CONFIG_FOLDER, social+'-status.json' );\n\n  // Load status file\n  let status;\n  try {\n    status = require( STATUS_FILE );\n    log.info( 'Status loaded %d - %d', status.grid, status.coord );\n  } catch( err ) {\n    log.info( 'Status not present, creating one' );\n    status = saveState( 0, 0 );\n  }\n\n  // Create/load the grid points\n  let grids;\n  try {\n    log.trace( 'Loading from file \"%s\"', GRID_FILE );\n    grids = require( GRID_FILE );\n    log.debug( 'Grid loaded' );\n  } catch( err ) {\n    log.info( 'Generating grids' );\n    let fc = grid.json( gridConfig );\n    grids = fc.features.map( f => f.geometry.coordinates );\n    log.trace( 'Generated %d grids', grids.length );\n\n    let json = JSON.stringify( grids, null, 2 );\n\n    fs.writeFileSync( GRID_FILE, json, 'utf8' );\n  }\n\n\n\n\n  // Cycle over the grids\n  for( let gridIndex=status.grid; gridIndex<gridConfig.length; gridIndex++ ) {\n    let currentMpp = gridConfig[ gridIndex ].mpp;\n    let points = grids[ gridIndex ];\n    log.debug( 'Current grid %d with %d points', gridIndex, points.length );\n\n    for( let coordIndex=status.coord; coordIndex<points.length; coordIndex++ ) {\n    // for( let coords of points ) {\n      let coords = points[ coordIndex ];\n      let lat = coords[ 1 ];\n      let lon = coords[ 0 ];\n      let radius = currentMpp/1000;\n\n      try {\n        let posts = yield query( lat, lon, radius );\n        log.trace( 'Returned %d posts', posts.length );\n\n        yield savePosts( posts );\n\n      } catch( err ) {\n        if( err.code==='ECONNREFUSED' ) {\n          log.error( 'Cannot connect %s', err.message );\n        }\n\n        log.error( err, 'Query failed: %s', err.message );\n\n      } finally {\n        // Save state\n        saveState( gridIndex, coordIndex );\n      }\n    }\n    log.debug( 'Done grid %d', gridIndex );\n    status.coord = 0; // Rest coodinates index\n  }\n  log.debug( 'Done all grids' );\n\n  fs.unlinkSync( STATUS_FILE );\n  closeMongo();\n} )\n.catch( err => {\n  log.fatal( err, 'NUOOOOOOOOO' );\n  closeMongo();\n} )\n.then( ()=> {\n  log.info( 'Bye' );\n  process.exit( 0 );\n} );\n\n//  50 6F 77 65 72 65 64  62 79  56 6F 6C 6F 78"],"sourceRoot":"/source/"}